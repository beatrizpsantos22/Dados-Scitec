
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

st.set_page_config(page_title="Dashboard de Combust√≠veis", layout="wide")

st.title("‚õΩ Dashboard de Pre√ßos de Combust√≠veis")
st.caption("Fonte: Dataset de pre√ßos m√©dios, m√≠nimos e m√°ximos por tipo de combust√≠vel.")

# ======================
# CARREGAR DADOS
# ======================
@st.cache_data
def load_data():
    return pd.read_csv("combustivel_dataset.csv")

df = load_data()

# Criar coluna de data (ano-m√™s)
df["data"] = pd.to_datetime(df["ano"].astype(str) + "-" + df["mes"].astype(str) + "-01")

# ======================
# FILTROS
# ======================
st.sidebar.header("‚öôÔ∏è Filtros")

anos = st.sidebar.multiselect("Selecione o(s) ano(s):", sorted(df["ano"].unique()), default=sorted(df["ano"].unique()))
df_filtered = df[df["ano"].isin(anos)]

# ======================
# VIS√ÉO GERAL
# ======================
st.subheader("üîé Vis√£o Geral do Dataset")
c1, c2, c3 = st.columns(3)
c1.metric("Per√≠odo", f"{df['ano'].min()} - {df['ano'].max()}")
c2.metric("N¬∫ Registros", f"{df.shape[0]}")
c3.metric("Combust√≠veis analisados", "Gasolina, Etanol, Diesel, GLP, GNV")

with st.expander("üëÄ Amostra dos Dados"):
    st.dataframe(df_filtered.head(20), use_container_width=True)

# ======================
# S√âRIE TEMPORAL
# ======================
st.subheader("üìà Evolu√ß√£o dos Pre√ßos M√©dios")

combustiveis = {
    "Gasolina Comum": "gasolina_comum_preco_revenda_avg",
    "Gasolina Aditivada": "gasolina_aditivada_preco_revenda_avg",
    "Etanol Hidratado": "etanol_hidratado_preco_revenda_avg",
    "√ìleo Diesel": "oleo_diesel_preco_revenda_avg",
    "√ìleo Diesel S10": "oleo_diesel_s10_preco_revenda_avg",
    "GLP (G√°s de Cozinha)": "gas_cozinha_glp_preco_revenda_avg",
    "GNV": "gas_natural_veicular_gnv_preco_revenda_avg"
}

selected_comb = st.multiselect("Selecione os combust√≠veis:", options=list(combustiveis.keys()), default=["Gasolina Comum", "Etanol Hidratado"])

if selected_comb:
    fig, ax = plt.subplots(figsize=(10,5))
    for comb in selected_comb:
        col = combustiveis[comb]
        ax.plot(df_filtered["data"], df_filtered[col], label=comb)
    ax.set_title("Evolu√ß√£o dos Pre√ßos M√©dios")
    ax.set_ylabel("Pre√ßo (R$)")
    ax.legend()
    st.pyplot(fig)

# ======================
# COMPARA√á√ÉO ENTRE COMBUST√çVEIS
# ======================
st.subheader("‚öñÔ∏è Compara√ß√£o de Combust√≠veis")

meses_opcoes = sorted(df_filtered["mes"].unique())
ano_selecionado = st.selectbox("Selecione o ano para compara√ß√£o:", sorted(df_filtered["ano"].unique()))
mes_selecionado = st.selectbox("Selecione o m√™s para compara√ß√£o:", meses_opcoes)

df_mes = df_filtered[(df_filtered["ano"] == ano_selecionado) & (df_filtered["mes"] == mes_selecionado)]

cols_avg = [v for v in combustiveis.values()]
df_plot = df_mes[cols_avg].mean().reset_index()
df_plot.columns = ["Combust√≠vel", "Pre√ßo M√©dio"]
df_plot["Combust√≠vel"] = df_plot["Combust√≠vel"].map({v: k for k, v in combustiveis.items()})

fig, ax = plt.subplots(figsize=(8,5))
sns.barplot(data=df_plot, x="Combust√≠vel", y="Pre√ßo M√©dio", ax=ax)
ax.set_title(f"Compara√ß√£o de Pre√ßos M√©dios ({mes_selecionado:02d}/{ano_selecionado})")
ax.set_ylabel("Pre√ßo (R$)")
ax.tick_params(axis='x', rotation=30)
st.pyplot(fig)

# ======================
# ESTAT√çSTICAS DESCRITIVAS
# ======================
st.subheader("üìê Estat√≠sticas Descritivas")
st.dataframe(df_filtered[[v for v in combustiveis.values()]].describe().transpose(), use_container_width=True)

# ======================
# CORRELA√á√ÉO
# ======================
st.subheader("üß† Correla√ß√£o entre Pre√ßos M√©dios")

corr = df_filtered[[v for v in combustiveis.values()]].corr()
fig, ax = plt.subplots(figsize=(7,6))
sns.heatmap(corr, annot=True, cmap="viridis", fmt=".2f")
ax.set_title("Matriz de Correla√ß√£o entre Combust√≠veis")
st.pyplot(fig)
